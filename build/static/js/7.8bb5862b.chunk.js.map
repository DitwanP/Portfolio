{"version":3,"sources":["components/ContactMe.js"],"names":["pageVariants","in","scale","x","notIn","outDown","y","pageTransitions","type","ease","duration","container","start","opacity","end","rotate","rotateX","particlesConfigDark","showCube","dimension","velocity","boundaryType","antialias","direction","xMin","xMax","yMin","yMax","zMin","zMax","lines","colorMode","color","transparency","limitConnections","maxConnections","minDistance","visible","particles","shape","boundingBox","count","minSize","maxSize","cameraControls","enabled","enableDamping","dampingFactor","enableZoom","autoRotate","autoRotateSpeed","resetCameraFlag","particlesConfigTeal","ContactMe","props","state","name","email","message","sending","onNameChange","bind","onEmailChange","onMessageChange","handleSubmit","resetForm","event","preventDefault","this","setState","alert","axios","method","url","scope","data","then","response","status","div","className","variants","initial","animate","exit","transition","style","delay","config","id","onSubmit","htmlFor","value","onChange","aria-describedby","rows","button","target","Component"],"mappings":"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","file":"static/js/7.8bb5862b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ContactMe.scss';\nimport { motion } from \"framer-motion\";\nimport { RiMailSendLine } from 'react-icons/ri';\nimport ParticleField from 'react-particles-webgl';\nimport axios from 'axios';\n\nconst pageVariants = { \n    in:{ \n        scale: [0.95, 0.95, 0.95, 1],\n        x: [\"100vw\", \"100vw\", \"0vw\", \"0vw\"],\n    },\n    notIn: {\n        scale: 0.95,\n        x: \"100vw\",\n    },\n    outDown: {\n        scale: [1, 0.95, 0.95],\n        y: [0, 0, 1000],\n    }\n}\n\nconst pageTransitions = { \n    type: \"tween\",\n    ease: \"easeInOut\",\n    duration: 0.75,\n}\n\nconst container = { \n    start:{ \n        y: 40, opacity: 0 \n    },\n    end: {\n        y: 0, opacity: 1 \n    },\n    rotate: {\n        scale: 1.1, rotateX: 180\n    },\n}\n\nconst particlesConfigDark = {\n    showCube: false,\n    dimension: '3D',\n    velocity: 0.5,\n    boundaryType: 'passthru',\n    antialias: false,\n    direction: {\n        xMin: -0.6,\n        xMax: 0.3,\n        yMin: 1,\n        yMax: 0,\n        zMin: -0.6,\n        zMax: 0.3\n    },\n    lines: {\n        colorMode: 'solid',\n        color: '#081016',\n        transparency: 0.9,\n        limitConnections: true,\n        maxConnections: 20,\n        minDistance: 150,\n        visible: false\n    },\n    particles: {\n        colorMode: 'solid',\n        color: '#081016',\n        transparency: 1,\n        shape: 'circle',\n        boundingBox: 'canvas',\n        count: 90,\n        minSize: 20,\n        maxSize: 40,\n        visible: true\n    },\n    cameraControls: {\n        enabled: false,\n        enableDamping: true,\n        dampingFactor: 0.2,\n        enableZoom: true,\n        autoRotate: false,\n        autoRotateSpeed: 0.3,\n        resetCameraFlag: true\n    }\n}\n\nconst particlesConfigTeal = {\n    showCube: false,\n    dimension: '3D',\n    velocity: 0.5,\n    boundaryType: 'passthru',\n    antialias: false,\n    direction: {\n        xMin: -0.6,\n        xMax: 0.3,\n        yMin: 1,\n        yMax: 0,\n        zMin: -0.6,\n        zMax: 0.3\n    },\n    lines: {\n        colorMode: 'rainbow',\n        color: '#351CCB',\n        transparency: 0.9,\n        limitConnections: true,\n        maxConnections: 20,\n        minDistance: 150,\n        visible: false\n    },\n    particles: {\n        colorMode: 'solid',\n        color: '#4bc3b7',\n        transparency: 1,\n        shape: 'circle',\n        boundingBox: 'canvas',\n        count: 60,\n        minSize: 10,\n        maxSize: 30,\n        visible: true\n    },\n    cameraControls: {\n        enabled: false,\n        enableDamping: true,\n        dampingFactor: 0.2,\n        enableZoom: true,\n        autoRotate: false,\n        autoRotateSpeed: 0.3,\n        resetCameraFlag: true\n    }\n}\n\nclass ContactMe extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n            sending: false,\n        }\n\n        this.onNameChange = this.onNameChange.bind(this);\n        this.onEmailChange = this.onEmailChange.bind(this);\n        this.onMessageChange = this.onMessageChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.resetForm = this.resetForm.bind(this);\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        this.setState({sending: true})\n\n        if (this.state.name === '' || this.state.email === '' || this.state.message === '')\n        {\n            alert(\"Please fill out each field before attempting to send a message.\")\n        } \n        else {\n            axios({\n                method: \"POST\", \n                url:\"http://localhost:3005/send\", \n                scope:\"https://mail.google.com/\",\n                data: this.state\n            })\n            .then((response) => {\n                if (response.data.status === 'success') {\n                    alert(\"Message was sent successfully.\");\n                    this.resetForm()\n                    this.setState({sending: false})\n                } \n                else if (response.data.status === 'fail') {\n                    alert(\"Message failed to send.\");\n                    this.setState({sending: false})\n                }\n            })\n        }\n    }\n\n    resetForm(){\n        this.setState({\n            name: '', \n            email: '', \n            message: ''\n        });\n    }\n\n    render() {      \n        return (\n            <motion.div className=\"contact-me\"\n            variants={pageVariants}\n            initial=\"notIn\"\n            animate=\"in\"\n            exit=\"outDown\"\n            transition={pageTransitions}>\n                <motion.div className=\"animation-canvas\"\n                style={{opacity: 0 }}\n                animate={{opacity: 1}}\n                transition={{duration: 2, delay: 2 }}>\n                    <ParticleField config={particlesConfigDark}/>\n                </motion.div>\n                <motion.div className=\"animation-canvas\"\n                style={{opacity: 0 }}\n                animate={{opacity: 1}}\n                transition={{duration: 2, delay: 2 }}>\n                    <ParticleField config={particlesConfigTeal}/>\n                </motion.div>\n                <section className=\"contact-me-content\">\n                    <form id=\"contact-form\" onSubmit={this.handleSubmit} method=\"POST\">\n                        <motion.div className=\"name-input\"\n                        variants={container}\n                        initial=\"start\"\n                        animate=\"end\"\n                        transition={{ ease: \"easeIn\", duration: 0.25, delay: 1 }}>\n                            <label htmlFor=\"name\">Name</label>\n                            <input type=\"text\" \n                            value={this.state.name}\n                            onChange={this.onNameChange}/>\n                        </motion.div>\n                        <motion.div className=\"email-input\"\n                        variants={container}\n                        initial=\"start\"\n                        animate=\"end\"\n                        transition={{ ease: \"easeIn\", duration: 0.25, delay: 1.1 }}>\n                            <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                            <input type=\"email\" \n                            value={this.state.email} \n                            onChange={this.onEmailChange}\n                            aria-describedby=\"emailHelp\" />\n                        </motion.div>\n                        <motion.div className=\"message-input\"\n                        variants={container}\n                        initial=\"start\"\n                        animate=\"end\"\n                        transition={{ ease: \"easeIn\", duration: 0.25, delay: 1.2 }}> \n                            <label htmlFor=\"message\">Message</label>\n                            <textarea rows=\"5\" \n                            value={this.state.message} \n                            onChange={this.onMessageChange}/>\n                        </motion.div>\n                        <motion.button type=\"submit\" className=\"send-email-btn\"\n                        variants={container}\n                        initial=\"start\"\n                        animate=\"end\"\n                        transition={{ ease: \"easeIn\", duration: 0.25, delay: 1.3 }}>\n                            {this.state.sending ? <h1 className=\"sending-message\">Sending...</h1> : <RiMailSendLine className=\"icon\"/>}\n                        </motion.button>\n                    </form>\n                </section>\n            </motion.div>\n        )\n    }\n\n    onNameChange(event) {\n        this.setState({name: event.target.value})\n    }\n\n    onEmailChange(event) {\n        this.setState({email: event.target.value})\n    }\n\n    onMessageChange(event) {\n        this.setState({message: event.target.value})\n    }\n}\n\nexport default ContactMe;"],"sourceRoot":""}